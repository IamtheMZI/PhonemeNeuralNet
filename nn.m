function [updated_weight,distance_value,distance_index] = nn (input, weight, output,learning_rate)  updated_weight = weight; % Setting final weight to initial weight  p = 1;           % p is a index counter variable   [row,size_output] = size(output); %determining the size of the output  d = rand(1,size_output); % randomizing a 1xp vector to find the minimum  while p <= size_output % When the size of counter is less than or equal to ouput size    d(1,p) = sum((input - weight(p,:)).^2); %finding the     p = p + 1;  end  [val, ind] = min(d); % finding the index of the minimum between d1 and d2  distance_value = val;  distance_index = ind;  updated_weight(ind, :) = weight(ind,:) + learning_rate * (input - weight(ind, :)); %updating the weight matrix according to the minimum d  end